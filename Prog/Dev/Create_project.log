1                                         The SAS System             18:14 Monday, August 31, 2015

NOTE: Copyright (c) 2002-2008 by SAS Institute Inc., Cary, NC, USA. 
NOTE: SAS (r) Proprietary Software 9.2 (TS2M3) 
      Licensed to THE URBAN INSTITUTE, Site 70097024.
NOTE: This session is executing on the X64_VSPRO  platform.



NOTE: SAS initialization used:
      real time           0.66 seconds
      cpu time            0.17 seconds
      

NOTE: AUTOEXEC processing beginning; file is D:\Users\ptatian\Documents\My SAS 
      Files\9.2\Autoexnt.sas.


NOTE: AUTOEXEC processing completed.

1          /**************************************************************************
2           Program:  Create_project.sas
3           Library:  PresCat
4           Project:  NeighborhoodInfo DC
5           Author:   P. Tatian
6           Created:  07/25/13
7           Version:  SAS 9.1
8           Environment:  Local Windows session (desktop)
9          
10          Description:  Create first Projects data set from Access DB DC_Info table.
11         
12          Modifications:
13           10/27/13 PAT Added Subsidy_Start_First and Subsidy_Start_Last.
14                        Merge with new geocoding file (PresCat.Project_geocode).
15           10/28/13 PAT Added Subsidized var. Changed Cat_* vars to numeric.
16                        Dropped Subsidy_PH, Subsidy_LIHTC.
17           09/27/14 PAT Updated for SAS1.
18           10/19/14 PAT Updated DC_info file.
19                        Corrected min/max assisted units calculation so that
20                        units are first summed by program.
21           12/18/14 PAT Created Own_Type and Mgr_Type vars.
22                        Labeled all variables. Dropped unnecessary variables.
23           01/29/15 PAT Assigning NLIHC_IDs to 1919 Calvert Street NW (NL001031),
24                        Congress Heights PUD (NL001032).
25           06/18/15 PAT Change category for Wah Luck to 2 (expiring).
26           08/31/15 PAT Replace PresCat.DC_Info_10_19_14 with PresCat.DC_Info_07_08_15.
27         **************************************************************************/
28         
29         %include "L:\SAS\Inc\StdLocal.sas";
NOTE: Libref _METADAT was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: L:\Libraries\Metadata\Data
2 The SAS System                                                     18:14 Monday, August 31, 2015

75        +
76        +options ls=124 ps=48;    ** Landscape **;
77        +
78        +** Output title **;
79        +
80        +title "&_library/&_program:  NeighborhoodInfo DC";
81        +
82        +** Define General library for local session only **;
83        +
84        +%DCData_lib( General, env=windows, macdef=dcautos uiautos sasautos )
MPRINT(DCDATA_LIB):   options nomprint;
NOTE: Libref GENERA_L was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: D:\DCData\Libraries\General\Data
NOTE: Libref GENERA_R was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: L:\Libraries\General\Data
NOTE: Libref GENERAL was successfully assigned as follows: 
      Levels:           2
      Engine(1):        V9 
      Physical Name(1): D:\DCData\Libraries\General\Data
      Engine(2):        V9 
      Physical Name(2): L:\Libraries\General\Data

=====================================================================
Current FmtSearch Option value:

     WORK* LIBRARY* GENERAL

   *implicitly included by default.

=====================================================================
Status of current catalogs:

NOTE:    WORK.FORMATS DOES NOT EXIST
NOTE:    LIBRARY.FORMATS DOES NOT EXIST
NOTE:    GENERAL.FORMATS EXISTS
=====================================================================


=====================================================================
Current Sasautos Option value:

     TTAUTOS  GENERA_L DCAUTOS UIAUTOS SASAUTOS

=====================================================================
3 The SAS System                                                                               18:14 Monday, August 31, 2015



=====================================================================
Current Sasautos Option value:

     TTAUTOS GENERA_L  GENERA_R DCAUTOS UIAUTOS SASAUTOS

=====================================================================

85        +
86        +%let _userid = %sysfunc( putc( %lowcase(&SYSUSERID), $longusr. ) );
NOTE: %INCLUDE (level 1) ending.
87         
88         ** Define libraries **;
89         %DCData_lib( PresCat, local=n )
MPRINT(DCDATA_LIB):   options nomprint;
NOTE: Libref PRESCA_R was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: L:\Libraries\PresCat\Data
NOTE: Libref PRESCAT was successfully assigned as follows: 
      Levels:           1
      Engine(1):        V9 
      Physical Name(1): L:\Libraries\PresCat\Data

=====================================================================
Current FmtSearch Option value:

     WORK* LIBRARY* GENERAL PRESCAT

   *implicitly included by default.

=====================================================================
Status of current catalogs:

NOTE:    WORK.FORMATS DOES NOT EXIST
NOTE:    LIBRARY.FORMATS DOES NOT EXIST
NOTE:    GENERAL.FORMATS EXISTS
NOTE:    PRESCAT.FORMATS EXISTS
=====================================================================


=====================================================================
Current Sasautos Option value:

     TTAUTOS  PRESCA_R GENERA_L GENERA_R DCAUTOS UIAUTOS SASAUTOS

4 The SAS System                                                                               18:14 Monday, August 31, 2015

=====================================================================

90         
91         ** Get min/max assisted units **;
92         
93         proc summary data=PresCat.Subsidy nway;
94           class Nlihc_id Program;
95           var units_assist poa_start poa_end Subsidy_active;
96           output out=Subsidy_a
97             sum(units_assist)=
98             min(poa_start poa_end)=Subsidy_Start_First Subsidy_End_First
99             max(poa_start poa_end)=Subsidy_Start_Last Subsidy_End_Last
100            max(Subsidy_active)=Subsidized;
101        run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 707 observations read from the data set PRESCAT.SUBSIDY.
NOTE: The data set WORK.SUBSIDY_A has 702 observations and 10 variables.
NOTE: Compressing data set WORK.SUBSIDY_A decreased size by 20.00 percent. 
      Compressed is 8 pages; un-compressed would require 10 pages.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

102        
103        proc summary data=Subsidy_a;
104          by Nlihc_id;
105          var units_assist Subsidy_Start_First Subsidy_End_First Subsidy_Start_Last Subsidy_End_Last Subsidized;
106          output out=Subsidy
107            min(units_assist Subsidy_Start_First Subsidy_End_First)=Proj_Units_Assist_Min Subsidy_Start_First
107      ! Subsidy_End_First
108            max(units_assist Subsidy_Start_Last Subsidy_End_Last)=Proj_Units_Assist_Max Subsidy_Start_Last
108      ! Subsidy_End_Last
109            max(Subsidized)=;
110        run;

NOTE: There were 702 observations read from the data set WORK.SUBSIDY_A.
NOTE: The data set WORK.SUBSIDY has 349 observations and 10 variables.
NOTE: Compressing data set WORK.SUBSIDY decreased size by 0.00 percent. 
      Compressed is 4 pages; un-compressed would require 4 pages.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

5 The SAS System                                                                               18:14 Monday, August 31, 2015

111        
112        data DC_Info;
113        
114          set PresCat.DC_Info_07_08_15;
INFO: Data file PRESCAT.DC_INFO_07_08_15.DATA is in a format that is native to another host, or the file encoding does not 
match the session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and 
might reduce performance.
115        
116          ** Apply standard corrections **;
117        
118          %DCInfo_corrections()
MPRINT(DCINFO_CORRECTIONS):   ** Assign new NLIHC_ID to St. Dennis (duplicate ID with CEMI - Bethune House) **;
MPRINT(DCINFO_CORRECTIONS):   if NLIHC_ID = "NL001007" and upcase( Proj_Name ) = "ST. DENNIS" then NLIHC_ID = "NL001030";
MPRINT(DCINFO_CORRECTIONS):   if NLIHC_ID = "NL000046" then do;
MPRINT(DCINFO_CORRECTIONS):   units = 535;
MPRINT(DCINFO_CORRECTIONS):   Category = "1";
MPRINT(DCINFO_CORRECTIONS):   end;
119        
120          ** Missing project IDs **;
121        
122          select ( Proj_name );
123            when ( '1919 Calvert Street NW' )
124              Nlihc_id = 'NL001031';
125            when ( 'CONGRESS HEIGHTS PUD' )
126              Nlihc_id = 'NL001032';
127            otherwise
128              /** Do nothing **/;
129          end;
130        
131        run;

NOTE: There were 361 observations read from the data set PRESCAT.DC_INFO_07_08_15.
NOTE: The data set WORK.DC_INFO has 361 observations and 102 variables.
NOTE: Compressing data set WORK.DC_INFO decreased size by 87.85 percent. 
      Compressed is 22 pages; un-compressed would require 181 pages.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
      

132        
133        proc sort data=DC_Info;
134          by Nlihc_id;
135        
136        title2 'File = DC_Info';
137        
6 The SAS System                                                                               18:14 Monday, August 31, 2015

138        %Dup_check(
139          data=DC_Info,
140          by=Nlihc_id,
141          id=proj_name proj_addre category,
142          out=_dup_check,
143          listdups=Y,
144          count=dup_check_count,
145          quiet=N,
146          debug=N
147        )
MPRINT(DUP_CHECK):   options nomprint;

NOTE: There were 361 observations read from the data set WORK.DC_INFO.
NOTE: SAS sort was used.
NOTE: The data set WORK.DC_INFO has 361 observations and 102 variables.
NOTE: Compressing data set WORK.DC_INFO decreased size by 87.85 percent. 
      Compressed is 22 pages; un-compressed would require 181 pages.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

NOTE: SAS threaded sort was used.
NOTE: Table WORK._DUP_CHECK created, with 0 rows and 5 columns.

NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: [Dup_check] 0 duplicate observations found in data set DC_INFO
NOTE: [Dup_check] for BY variables NLIHC_ID.

NOTE: No observations in data set WORK._DUP_CHECK.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: Deleting WORK._DUP_CHECK (memtype=DATA).
7 The SAS System                                                                               18:14 Monday, August 31, 2015

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

148        
149        title2;
150        
151        data PresCat.Project (label="Preservation Catalog, projects");
152        
153          length
154            Nlihc_id $ 8
155            Status $ 1
156            Subsidized 3
157            Category_Code $ 1
158            Cat_At_Risk 3
159            Cat_Expiring 3
160            Cat_Failing_Insp 3
161            Cat_More_Info 3
162            Cat_Lost 3
163            Cat_Replaced 3
164            Proj_Name $ 80
165            Proj_Addre $ 160
166            Proj_City $ 80
167            Proj_ST $ 2
168            Proj_Zip $ 5
169            Proj_Units_Tot 8
170            Proj_Units_Assist_Min 8
171            Proj_Units_Assist_Max 8
172            Hud_Own_Effect_dt 8
173            Hud_Own_Name $ 80
174            Hud_Own_Type $ 2
175            Hud_Mgr_Name $ 80
176            Hud_Mgr_Type $ 2
177            Subsidy_Start_First 8
178            Subsidy_Start_Last 8
179            Subsidy_End_First 8
180            Subsidy_End_Last 8
181            Ward2012 $ 1
182            ;
183        
184          merge
185            DC_Info
186              (keep=NLIHC_ID Category Proj_Name Proj_Addre Proj_City Proj_ST
187                    Units Own_Effect Own_Compan Own_Comp_1 Own_Indivi Mgr_Compan
188                    Mgr_Comp_1 Mgr_Indivi
8 The SAS System                                                                               18:14 Monday, August 31, 2015

189               rename=(Proj_Name=Proj_Name_old Proj_Addre=Proj_Addre_old)
190               in=in1)
191            PresCat.Project_geocode (drop=Proj_name)
192            Subsidy (keep=Nlihc_id Proj_Units_Assist_: Subsidy_Start_: Subsidy_End_: Subsidized)
193                    ;
194          by Nlihc_id;
195        
196          ***if in1;
197        
198          %Project_name_clean( Proj_name_old, Proj_name )
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = propcase( left( compbl( Proj_name_old ) ) );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'Iii', 'III' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'Ii', 'II' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'Iv', 'IV' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'IVy', 'Ivy' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'Ne', 'NE' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'NEw', 'New' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'NEighborhood', 'Neighborhood' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'NEighbors', 'Neighbors' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'Nw', 'NW' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'Se', 'SE' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'SEnior', 'Senior' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'SEcond', 'Second' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'SErvices', 'Services' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'SEnate', 'Senate' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'Sw', 'SW' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'At', 'at' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'atlantic', 'Atlantic' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'Pud', 'PUD' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'Chhi', 'CHHI' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'Ncba', 'NCBA' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'Cemi', 'CEMI' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'Idi', 'IDI' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'Wdc', 'WDC' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'Mlk', 'MLK' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'Ufas', 'UFAS' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'Dmh', 'DMH' );
MPRINT(PROJECT_NAME_CLEAN):   Proj_name = tranwrd( Proj_name, 'Tcb', 'TCB' );
199        
200          ** DROP DUPLICATES OF NL001007 **;
201        
202          if nlihc_id = "NL001007" and proj_addre = "401 Chaplin St, SE" then delete;
203        
204          ** 54th Street Housing **;
205        
206          ** New Catalog projects **;
9 The SAS System                                                                               18:14 Monday, August 31, 2015

207        
208          select ( Nlihc_id );
209        
210            when ( "NL001030" ) do;
211              Subsidized = 1;
212            end;
213        
214            when ( "NL001031" ) do;
215              Subsidized = 1;
216            end;
217        
218            when ( "NL001033" ) do;
219              Category = '5';
220              Subsidized = 1;
221              Proj_name = '54th Street Housing';
222              Proj_city = 'Washington';
223              Proj_st = 'DC';
224            end;
225        
226            otherwise
227              /** Do nothing **/;
228        
229          end;
230        
231          Category_Code = Category;
232        
233          if Category_Code ~= '6' then Status = 'A';
234          else Status = 'I';
235        
236          array cat{*} Cat_: ;
237        
238          do i = 1 to dim( cat );
239            cat{i} = 0;
240          end;
241        
242          select ( Category_code );
243            when ( '1' )
244              Cat_At_Risk = 1;
245            when ( '2' )
246              Cat_Expiring = 1;
247            when ( '3' )
248              Cat_Failing_Insp = 1;
249            when ( '4' )
250              Cat_More_Info = 1;
251            when ( '5' )
252              /** Skip category 5 **/;
10 The SAS System                                                                              18:14 Monday, August 31, 2015

253            when ( '6' )
254              Cat_Lost = 1;
255            when ( '7' )
256              Cat_Replaced = 1;
257            otherwise
258              do;
259                %warn_put( msg="Invalid Category value. " _n_= NLIHC_ID= Category= Category_code= )
MPRINT(WARN_PUT):   put "WARN" "ING:" " " "Invalid Category value. " _n_= NLIHC_ID= Category= Category_code=;
260              end;
261          end;
262        
263          ** Mark projects with subsidy less than one year away as expiring **;
264        
265          if -100 < intck( 'year', Subsidy_End_First, date() ) < 1 then Cat_Expiring = 1;
266        
267          Proj_units_tot = Units;
268        
269          Hud_Own_Effect_dt = Own_Effect;
270        
271          array a{*} Proj_Addre Proj_City Own_Compan Own_Indivi Mgr_Compan
272                  Mgr_Indivi;
273        
274          do i = 1 to dim( a );
275            if a{i} = upcase( a{i} ) then a{i} = propcase( a{i} );
276          end;
277        
278          if Proj_City = "Wash" then Proj_City = "Washington";
279        
280          if Own_Compan ~= "" then do;
281        
282            Hud_Own_Name = left( Own_Compan );
283        
284            if Own_Indivi ~= "" then Hud_Own_Name = trim( Hud_Own_Name ) || ' / ' || left( Own_Indivi );
285        
286            select ( Own_comp_1 );
287              when ( 'Limited Dividend' ) Hud_Own_type = 'LD';
288              when ( 'Non-Profit' ) Hud_Own_type = 'NP';
289              when ( 'Non-Profit Controlled' ) Hud_Own_type = 'NC';
290              when ( 'Other' ) Hud_Own_type = 'OT';
291              when ( 'PHA' ) Hud_Own_type = 'HA';
292              when ( 'Profit Motivated' ) Hud_Own_type = 'PM';
293              when ( '' ) Hud_Own_type = '  ';
294              otherwise do;
295                %warn_put( msg='Unknown company type: ' _n_= nlihc_id= Hud_Own_name= Own_comp_1= )
MPRINT(WARN_PUT):   put "WARN" "ING:" " " 'Unknown company type: ' _n_= nlihc_id= Hud_Own_name= Own_comp_1=;
296              end;
11 The SAS System                                                                              18:14 Monday, August 31, 2015

297            end;
298        
299          end;
300          else do;
301        
302            Hud_Own_Name = left( Own_Indivi );
303            Hud_Own_type = 'IN';
304        
305          end;
306        
307          if Mgr_Compan ~= "" then do;
308        
309            Hud_Mgr_Name = left( Mgr_Compan );
310        
311            if Mgr_Indivi ~= "" then Hud_Mgr_Name = trim( Hud_Mgr_Name ) || ' / ' || left( Mgr_Indivi );
312        
313            select ( Mgr_comp_1 );
314              when ( 'Limited Dividend' ) Hud_Mgr_type = 'LD';
315              when ( 'Non-Profit' ) Hud_Mgr_type = 'NP';
316              when ( 'Non-Profit Controlled' ) Hud_Mgr_type = 'NC';
317              when ( 'Other' ) Hud_Mgr_type = 'OT';
318              when ( 'PHA' ) Hud_Mgr_type = 'HA';
319              when ( 'Profit Motivated', 'Proft Motivated' ) Hud_Mgr_type = 'PM';
320              when ( '' ) Hud_Mgr_type = '  ';
321              otherwise do;
322                %warn_put( msg='Unknown company type: ' _n_= nlihc_id= Hud_Mgr_name= Mgr_comp_1= )
MPRINT(WARN_PUT):   put "WARN" "ING:" " " 'Unknown company type: ' _n_= nlihc_id= Hud_Mgr_name= Mgr_comp_1=;
323              end;
324            end;
325        
326          end;
327          else do;
328        
329            Hud_Mgr_Name = left( Mgr_Indivi );
330            Hud_Mgr_type = 'IN';
331        
332          end;
333        
334          Update_Dtm = datetime();
335        
336          ** Subsidy status **;
337        
338          if missing( Subsidized ) then Subsidized = 0;
339        
340          **** CORRECTIONS ****;
341        
12 The SAS System                                                                              18:14 Monday, August 31, 2015

342          if nlihc_id = 'NL000208' then do;
343            ** Museum Square One **;
344            Cat_Expiring = 1;
345          end;
346        
347          if nlihc_id = 'NL000319' then do;
348            ** Wah Luck House **;
349            Category_code = '2';
350          end;
351        
352          label
353            NLIHC_ID = "Preservation Catalog project ID"
354            Status = "Project is active"
355            Subsidized = "Project is subsidized"
356            Category_code = "Preservation Catalog project category"
357            Cat_At_Risk = "Project at risk"
358            Cat_Expiring = "Project has upcoming expiring subsidy"
359            Cat_Failing_Insp = "Project has failed recent REAC inspection"
360            Cat_More_Info = "Project flagged for gathering more information"
361            Cat_Lost = "Lost affordable housing"
362            Cat_Replaced = "Replaced affordable housing"
363            Proj_Name = "Project name"
364            Proj_Addre = "Project main address"
365            Proj_City = "Project city"
366            Proj_ST = "Project state"
367            Proj_Zip = "Project ZIP code"
368            Proj_Units_Tot = "Total housing units in project"
369            Proj_Units_Assist_Min = "Total assisted housing units in project (minimum)"
370            Proj_Units_Assist_Max = "Total assisted housing units in project (maximum)"
371            Hud_Own_Effect_dt = "Date current owner acquired property (from HUD)"
372            Hud_Own_Name = "Current property owner name (from HUD)"
373            Hud_Own_Type = "Current property owner type (from HUD)"
374            Hud_Mgr_Name = "Current property manager name (from HUD)"
375            Hud_Mgr_Type = "Current property manager type (from HUD)"
376            Subsidy_Start_First = "First subsidy start date"
377            Subsidy_Start_Last = "Last subsidy start date"
378            Subsidy_End_First = "First subsidy end date"
379            Subsidy_End_Last = "Last subsidy end date"
380            Proj_Name_old = "Old project name from Access DB"
381            Proj_Addre_old = "Old project address from Access DB"
382            Ward2012 = 'Ward (2012)'
383            Anc2012 = 'Advisory Neighborhood Commission (2012)'
384            Psa2012 = 'Police Service Area (2012)'
385            Geo2010 = 'Full census tract ID (2010): ssccctttttt'
386            Cluster_tr2000 = 'Neighborhood cluster (tract-based, 2000)'
387            Cluster_tr2000_name = 'Neighborhood cluster names (tract-based, 2000)'
13 The SAS System                                                                              18:14 Monday, August 31, 2015

388            Zip = 'ZIP code (5 digit)'
389            Proj_image_url = 'OCTO property image URL'
390            Proj_streetview_url = 'Google Street View URL'
391            Proj_address_id = 'Project MAR address ID'
392            Proj_x = 'Project longitude (MD State Plane Coord., NAD 1983 meters)'
393            Proj_y = 'Project latitude (MD State Plane Coord., NAD 1983 meters)'
394            Proj_lat = 'Project latitude'
395            Proj_lon = 'Project longitude'
396            Bldg_count = 'Number of buildings for project'
397            Update_Dtm = "Datetime of last project update"
398          ;
399        
400          format Status $Status. Category_code $Categry. Hud_Own_Effect_dt mmddyy10.
401            Hud_Own_type Hud_Mgr_type $ownmgrtype.
402            Subsidized Cat_At_Risk Cat_Expiring Cat_Failing_Insp Cat_More_Info Cat_Lost Cat_Replaced dyesno.
403            Update_Dtm datetime16.
404          ;
405        
406          drop i units category Own_Effect Own_Compan Own_Comp_1 Own_Indivi Mgr_Compan Mgr_Comp_1 Mgr_Indivi;
407        
408        run;

WARNING: Multiple lengths were specified for the variable Subsidized by input data set(s). This may cause truncation of 
         data.
WARNING: Unknown company type: _N_=46 Nlihc_id=NL000066
Hud_Own_Name=Development Corporation Of Columbia Heights / James Speight Own_Comp_1=3419 14TH ST NW
NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      116 at 265:13   
NOTE: There were 361 observations read from the data set WORK.DC_INFO.
NOTE: There were 362 observations read from the data set PRESCAT.PROJECT_GEOCODE.
NOTE: There were 349 observations read from the data set WORK.SUBSIDY.
NOTE: The data set PRESCAT.PROJECT has 362 observations and 45 variables.
NOTE: Compressing data set PRESCAT.PROJECT decreased size by 61.76 percent. 
      Compressed is 13 pages; un-compressed would require 34 pages.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.03 seconds
      

409        
410        proc sort data=PresCat.Project;
411          by nlihc_id;
412        run;

NOTE: There were 362 observations read from the data set PRESCAT.PROJECT.
14 The SAS System                                                                              18:14 Monday, August 31, 2015

NOTE: SAS sort was used.
NOTE: The data set PRESCAT.PROJECT has 362 observations and 45 variables.
NOTE: Compressing data set PRESCAT.PROJECT decreased size by 61.76 percent. 
      Compressed is 13 pages; un-compressed would require 34 pages.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

413        
414        %File_info( data=PresCat.Project, printobs=5,
415                    freqvars=Status Category_code Proj_City Proj_ST Ward2012 Proj_Zip Hud_Own_type Hud_Mgr_type )
MPRINT(FILE_INFO):   title2 "File = PresCat.Project";
MPRINT(FILE_INFO):   proc contents data=PresCat.Project;
MPRINT(FILE_INFO):   run;

NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      
NOTE: The PROCEDURE CONTENTS printed pages 1-2.

MPRINT(FILE_INFO):   proc print data=PresCat.Project (obs=5);
MPRINT(FILE_INFO):   title3 "Printing first 5 obs.";
MPRINT(FILE_INFO):   run;

NOTE: There were 5 observations read from the data set PRESCAT.PROJECT.
NOTE: The PROCEDURE PRINT printed pages 3-5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(FILE_INFO):   title3;
MPRINT(FILE_INFO):   options nolabel;
MPRINT(FILE_INFO):   proc means data=PresCat.Project n sum mean stddev min max;
MPRINT(FILE_INFO):   run;

NOTE: Multiple concurrent threads will be used to summarize data.
NOTE: There were 362 observations read from the data set PRESCAT.PROJECT.
NOTE: The PROCEDURE MEANS printed page 6.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

15 The SAS System                                                                              18:14 Monday, August 31, 2015

MPRINT(FILE_INFO):   options label;
MPRINT(FILE_INFO):   proc freq data=PresCat.Project;
MPRINT(FILE_INFO):   tables Status Category_code Proj_City Proj_ST Ward2012 Proj_Zip Hud_Own_type Hud_Mgr_type / missing;
MPRINT(FILE_INFO):   run;

NOTE: There were 362 observations read from the data set PRESCAT.PROJECT.
NOTE: The PROCEDURE FREQ printed pages 7-9.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(FILE_INFO):   title2;
416        
417        title2 'File = PresCat.Project';
418        
419        %Dup_check(
420          data=PresCat.Project,
421          by=nlihc_id,
422          id=Proj_name Proj_addre
423        )
MPRINT(DUP_CHECK):   options nomprint;
NOTE: SAS threaded sort was used.
NOTE: Table WORK._DUP_CHECK created, with 0 rows and 4 columns.

NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: [Dup_check] 0 duplicate observations found in data set PRESCAT.PROJECT
NOTE: [Dup_check] for BY variables NLIHC_ID.

NOTE: No observations in data set WORK._DUP_CHECK.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: Deleting WORK._DUP_CHECK (memtype=DATA).
16 The SAS System                                                                              18:14 Monday, August 31, 2015

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

424        title2;
425        
426        proc print data=PresCat.Project;
427          where missing( Nlihc_id );
428          var status Proj_name Proj_addre Proj_zip Ward2012;
429          title2 '---MISSING NLIHC_ID---';
430        run;

NOTE: No observations were selected from data set PRESCAT.PROJECT.
NOTE: There were 0 observations read from the data set PRESCAT.PROJECT.
      WHERE MISSING(Nlihc_id);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

431        title2;
432        
433        proc print data=PresCat.Project;
434          where missing( Ward2012 );
435          id nlihc_id;
436          var status Proj_name Proj_addre Proj_zip Ward2012;
437          title2 '---MISSING WARD---';
438        run;

NOTE: No observations were selected from data set PRESCAT.PROJECT.
NOTE: There were 0 observations read from the data set PRESCAT.PROJECT.
      WHERE MISSING(Ward2012);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

439        title2;
440        
441        proc freq data=PresCat.Project;
442          tables Hud_Own_Effect_dt;
443          tables Category_code * Cat_At_Risk * Cat_Expiring * Cat_Failing_Insp * Cat_More_Info * Cat_Lost
444                 * Cat_Replaced
445            / list missing nocum nopercent;
446          format Hud_Own_Effect_dt year.;
17 The SAS System                                                                              18:14 Monday, August 31, 2015

447        run;

NOTE: There were 362 observations read from the data set PRESCAT.PROJECT.
NOTE: The PROCEDURE FREQ printed pages 10-11.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

448        
449        **** Compare with earlier version ****;
450        
451        libname comp 'D:\DCData\Libraries\PresCat\Data\Old';
NOTE: Libref COMP was successfully assigned as follows: 
      Engine:        V9 
      Physical Name: D:\DCData\Libraries\PresCat\Data\Old
452        
453        proc compare base=Comp.Project compare=PresCat.Project listall maxprint=(40,32000);
454          id nlihc_id;
455        run;

NOTE: There were 362 observations read from the data set COMP.PROJECT.
NOTE: There were 362 observations read from the data set PRESCAT.PROJECT.
NOTE: At least one W.D format was too small for the number to be printed. The decimal may be shifted by the "BEST" format.
NOTE: The PROCEDURE COMPARE printed pages 12-23.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           1.61 seconds
      cpu time            0.42 seconds
      
